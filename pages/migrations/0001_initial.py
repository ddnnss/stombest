# Generated by Django 2.2.7 on 2019-12-02 12:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='', verbose_name='Картинко')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='День')),
            ],
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Месяц')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Категория услуг')),
                ('ico', models.ImageField(null=True, upload_to='', verbose_name='Иконко')),
                ('image', models.ImageField(null=True, upload_to='', verbose_name='Картинко')),
                ('tab1', models.CharField(max_length=255, null=True, verbose_name='TAB1 название')),
                ('tab1text', models.CharField(max_length=255, null=True, verbose_name='TAB1 текст')),
                ('tab2', models.CharField(max_length=255, null=True, verbose_name='TAB2 название')),
                ('tab2text', models.CharField(max_length=255, null=True, verbose_name='TAB2 текст')),
                ('tab3', models.CharField(max_length=255, null=True, verbose_name='TAB3 название')),
                ('tab3text', models.CharField(max_length=255, null=True, verbose_name='TAB3 текст')),
            ],
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Время')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Название услуга')),
                ('price', models.IntegerField(default=0, verbose_name='Цена')),
                ('category', models.ManyToManyField(null=True, to='pages.ServiceCat')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='ФИО Доктора')),
                ('cabinet', models.CharField(max_length=255, null=True, verbose_name='Кабинет')),
                ('image', models.ImageField(null=True, upload_to='', verbose_name='Картинко')),
                ('info', models.CharField(max_length=255, null=True, verbose_name='Инфо')),
                ('services', models.ManyToManyField(blank=True, null=True, to='pages.Service', verbose_name='Услуги')),
            ],
        ),
        migrations.CreateModel(
            name='Apply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('day', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Day')),
                ('doc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Doctor')),
                ('month', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Month')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Service')),
                ('time', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.Time')),
            ],
        ),
    ]
